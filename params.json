{"name":"SqliteMaker","body":"# Introduction\r\n**SqliteMaker** is a tool for converting csv data to sqlite databases. It is \r\nwritten in [Python][python] using ugly hacks with some [SQLAlchemy][sqlalchemy] \r\nORM-sauce sprinkled on top. \r\n\r\nThis is an old tool I wrote while learning how to write python (perhaps my first\r\ncomplete python project). I've recently tried my hand at a rewrite so that the \r\ncode is a little less embarassing, but I'm sure there are still some laughable \r\nhacks and other ugly corners... having said that - it _does_ work. I still use \r\nthis quite often in my daily analytical work, and for many more tasks than I \r\noriginally intended. YMMV.\r\n\r\nTo see the man-style help documentation, simply run: \r\n```\r\n$ python sqlitemaker.py -h\r\n```\r\n\r\n# Purpose / Use Cases\r\n\r\nI don't know about you, but I despise spreadsheets. It's not just Microsoft \r\nExcel - it's most any spreadsheet application. Don't get me wrong - they're \r\nincredibly useful in certain use cases, like creating a document containing \r\nsome simple tabular data, or for slapping together a adhoc calculator of sorts \r\nfor solving some complex math problem... but for data mining? No thanks. Even \r\nif you only have rudimentary SQL query skills, a database is a _much_ more \r\nuseful venue for analyzing tabular data. Thus the primary use case for this \r\ntool. \r\n\r\nAll too often I found myself needing to take some data in a spreadsheet, or \r\nother tabular data, and generate some report from it. No amount of spreadsheet \r\nproductivity application wizardry in the world is as handy as what can be \r\naccomplished with some simple `SELECT` statements in a SQL query. \r\n\r\n## Examples\r\n\r\nThe most common thing I do with **SqliteMaker** is take an Excel spreadsheet, \r\nexport it as a csv, and convert it to a [SQLite][sqlite] database. From there \r\nI'll usually open the database using a tool like [Sqliteman][sqliteman] \r\n(recommended) or [SQLite Database Browser][sqlitebrowser], and use the built-in \r\nquery editors to query for whatever information I'm after. Both tools let you \r\nexport query results as a csv file, so you can get your modified / analyzed \r\nresults back into the original format you started with.\r\n\r\nTo try this for yourself, copy a csv file into the directory where you have \r\ndownloaded **SqliteMaker** and run: \r\n\r\n```\r\n$ python sqlitemaker.py -i sample.csv\r\n```\r\n\r\n# Feedback\r\n\r\nMention me on Twitter at [@calebhailey][calebhailey] or \r\n[@SQLiteMaker][sqlitemaker], or drop me a line and let me know if this project \r\nis of interest to you, or if you have any questions: \r\n[calebhailey@gmail.com](mailto:calebhailey@gmail.com)\r\n\r\n\r\n[python]: http://www.python.org \"Python Home Page\"\r\n[sqlalchemy]: http://www.sqlalchemy.org/ \"SQLAlchemy - The Database Toolkit for Python\"\r\n[sqlite]: http://www.sqlite.org \"SQLite Home Page\"\r\n[sqliteman]: http://sqliteman.com/ \"SQLiteman - SQLite Databases Made Easy\"\r\n[sqlitebrowser]: http://sqlitebrowser.sourceforge.net/ \"SQLite Database Browser\"\r\n[calebhailey]: http://www.twitter.com/calebhailey \"Follow me on Twitter\"\r\n[sqlitemaker]: http://www.twitter.com/sqlitemaker \"Follow my project on Twitter\"\r\n\r\n\r\n","google":"UA-20518760-2","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Convert csv files to sqlite databases. Written in Python using elbow grease & SQLAlchemy. "}